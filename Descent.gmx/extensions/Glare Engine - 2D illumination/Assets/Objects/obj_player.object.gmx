<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouse_dir = 0;
sprite_index = spr_player_leg;
mask_index = player_mask;

//create a spotlight
l_color = make_color_hsv(0, 0, 255);
light = glr_light_create(spr_light_mask_spot, 0, x,y,l_color,0);
glr_light_set_shadow_strength(light, 0.5);
 
mesh = glr_mesh_create(x, y, false); 
var str = "[[4,-14],[3,-19],[-3,-22],[-9,-22],[-17,-17],[-20,-11],[-20,-6],[-17,-3],[-19,1],[-19,8],[-16,11],[-12,13],[-2,13],[7,10],[13,8],[22,8],[26,9],[29,7],[29,4],[26,2],[23,-6],[19,-11],[14,-13]]";
glr_mesh_submesh_add_json(mesh, str, 0, 0);
glr_mesh_update(mesh);
glr_mesh_set_layer(mesh, 1); 
glr_mesh_set_depth(mesh, 5);
glr_mesh_set_directional_shadow_length(mesh, 0.4);

 
//muzzle flash  
muzzle_light = glr_light_create(spr_light_mask_point, 0, 0, 0,l_color,0);
glr_light_set_active(muzzle_light, false); 
muzzle_scaling = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
mouse_dir = point_direction(x,y, mouse_x, mouse_y);

dt = delta_time/20000;

var hdir = 0, vdir = 0, moved = false;
if(keyboard_check(ord("W"))){
    moved = true;
    vdir = -1;
}
else if(keyboard_check(ord("S"))){
    moved = true;
    vdir = 1;
}
if(keyboard_check(ord("A"))){
    moved = true;
    hdir = -1;
}
else if(keyboard_check(ord("D"))){
    moved = true;
    hdir = 1;
}

 
if(moved &gt; 0){
    
    dir = point_direction(0,0,hdir,vdir);
    leg_dir = dir;
    image_angle = leg_dir; 

    var xmot, ymot;
    spd = 3 * dt;
    
    for (var i = 0; i &lt; 90; i += 5){
        xmot = x + lengthdir_x(spd, dir + i);
        ymot = y + lengthdir_y(spd, dir + i);
        if (!place_meeting(xmot, ymot, par_solid)){
            x = xmot;
            y = ymot; 
            break;
        }
        xmot = x + lengthdir_x(spd, dir - i);
        ymot = y + lengthdir_y(spd, dir - i);
        if (!place_meeting(xmot, ymot,par_solid)){
            x = xmot;
            y = ymot;
            break;
        }
    }
}

dist = point_distance(xprevious, yprevious, x, y);
if(dist &gt; 0) image_speed = 0.3 * dt;;
else{
    image_index = 0;
    image_speed = 0;
}



if(mouse_check_button(mb_left))
{
    if(current_time%3 == 0)
    {
        var px = x+lengthdir_x(20,mouse_dir);
        var py = y+lengthdir_y(20,mouse_dir);
        inst = instance_create(px, py, obj_bullet);
        inst.dir = mouse_dir+random_range(-3,3);
        
        glr_light_set_active(muzzle_light, true);
        muzzle_scaling = 1;
        glr_light_set_scaling(muzzle_light,muzzle_scaling,muzzle_scaling);
        glr_light_set_position(muzzle_light, px, py);
    }
}


//toggle the flashlight 
if(keyboard_check_pressed(ord("F")))
    glr_light_toggle(light);

    
//set the flashlight rotation and position
glr_light_set_transform(light, 
    x + lengthdir_x(20, mouse_dir), y + lengthdir_y(20, mouse_dir),
    1, 1, mouse_dir);

glr_mesh_set_transform(mesh, x, y, 1, 1, mouse_dir); 
 

//avoid obstacles
inst=instance_place(x,y,par_solid);
if(instance_exists(inst)){
    if(y&gt;inst.y) y+=1;
    else y-=1;
    
    if(x&gt;inst.x) x+=1;
    else x-=1; 
}

if(muzzle_scaling &gt; 0){
    muzzle_scaling -= 0.05;
    glr_light_set_scaling(muzzle_light,muzzle_scaling,muzzle_scaling);
    if(muzzle_scaling &lt;= 0){
        glr_light_set_active(muzzle_light, false);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> 

draw_self(); 
draw_sprite_ext(spr_player, image_index, x, y, 1, 1, mouse_dir, -1, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>20,36</point>
    <point>30,30</point>
  </PhysicsShapePoints>
</object>
