<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_platform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_platform_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>light = glr_light_create(spr_light_mask_point, 0, x, y, c_white,0);
image_speed = 1/3;

grav = 0.4;
decel = 0.1;
accel = 0.25;
max_hspd = 2;
max_vspd = 8;
hspd = 0;
vspd = 0;
jumps = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
dt = delta_time/20000;
 

if(keyboard_check(ord("A")))
{
    hspd -= accel;
    if(hspd &lt; -max_hspd)
        hspd = -max_hspd;
}
else if(keyboard_check(ord("D")))
{
    hspd += accel;
    if(hspd &gt; max_hspd)
        hspd = max_hspd;
}
else
{
    hspd -=  sign(hspd) * min(abs(hspd), decel);
}

if(hspd &gt; 0)
    image_xscale = 1;
else if(hspd &lt; 0)
    image_xscale = -1;
    
    
if(keyboard_check_pressed(ord("W"))){
    if(jumps &lt; 2){
        jumps++;
        vspd = -7;
    }
    else if (place_meeting(x+5, y, par_solid))
    {
        vspd = -6;
        jumps = 2;
        hspd = -max_hspd;
    }
    else if(place_meeting(x-5, y, par_solid))
    {
        vspd = -6;
        jumps = 2;
        hspd = max_hspd;
    } 
}
 

vspd = clamp(vspd+grav, -max_vspd, max_vspd);



if(hspd != 0)
{
    image_speed = 1/3 * hspd/max_hspd;
    sprite_index = spr_player_platform;
    for(var i=0; i&lt;abs(hspd); i++)
    {
        if(place_meeting(x+i*sign(hspd), y, par_solid))
        {
            hspd = 0;
            break;
        }
    }
    x+=hspd; 
}
else
{
    sprite_index = spr_player_platform_idle;
    image_speed = 1/20;
    x = floor(x);
}

 
if(place_meeting(x, y, par_solid))
{
    x = xprevious;
    y = yprevious;
}
  
var collided = false;
for(var i = 0; i &lt;= abs(vspd); i++)
{
    if(place_meeting(x, y+(i+1)*sign(vspd), par_solid)) 
    {   
        collided = true;
        y += i;
        if(vspd &gt; 0)
            jumps = 0;
        vspd = 0;
        break;
    }
}

if(!collided)
{ 
    y += vspd  ; 
} 
if(vspd != 0)
{
    sprite_index = spr_player_platform_jump;
    if(vspd &lt; 0)
        image_index = 0;
    else
        image_index = 1;
        
    image_speed = 0;
} 


if(x != xprevious || y != yprevious)
{
    glr_light_set_position(light, round(x), round(y));
}
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>20,36</point>
    <point>30,30</point>
  </PhysicsShapePoints>
</object>
